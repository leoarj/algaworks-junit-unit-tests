<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.algaworks.junit</groupId>
	<artifactId>junit-tests</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>junit5-tests</name>
	<description>Demo project</description>
	<properties>
		<java.version>17</java.version>
		<maven.compiler.target>17</maven.compiler.target>
		<maven.compiler.source>17</maven.compiler.source>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Dependência do JUnit para testes paramêtrizados -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.11.0</version>
			<scope>test</scope>
		</dependency> -->
		<!-- Dependência do mockito-inline para testes em métodos estáticos -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>5.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.11.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Dependência do AssertJ -->
		<!--
			Biblioteca de asserções, que fornece mais asserções além das asserções padrão do JUnit.
		-->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.26.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<mainClass>com.algaworks.junit.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- Plugin do Surefire para controlar testes pelo Maven -->
			<!--
			 mvn test
			 mvn clean package (já realiza os testes)
			 mvn clean package -Dmaven.test.skip=true (ignora os testes, útil conforome a pipeline de build)
			 -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<!-- Plugin do JACOCO para análise de cobertura de testes
			JACOCO opera a nível de byte-code, então, mostrará mais métodos na cobertura.
			-->
			<!--
			 mvn test jacoco:report
			 Executável fica na pasta target
			 Relatórios ficam na pasta target/site
			 -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<!-- Baixa o agente -->
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<!-- Momentos de teste (antes de preparar o pacote) -->
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
